pipeline {
    agent any

    stages {
        stage('Setup') {
            steps {
                sh 'python3 --version'
                sh 'pip3 install -r requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'pytest'
            }
        }
    }

    post {
        success {
            script {
                def payload = [
                    content: "✅ Build SUCCESS on `${env.BRANCH_NAME}`\nURL: ${env.BUILD_URL}"
                ]
                httpRequest(
                    httpMode: 'POST',
                    contentType: 'APPLICATION_JSON',
                    requestBody: groovy.json.JsonOutput.toJson(payload),
                    url: 'https://discord.com/api/webhooks/1370013350733545525/XQ4yZSkIN7s8PFgN_gofeCDJWHGwM52rwuGFTXvRYbt0IwpGP12buIstrIlNO_iJyJbe'
                )
            }
        }

        failure {
            script {
                def payload = [
                    content: "❌ Build FAILED on `${env.BRANCH_NAME}`\nURL: ${env.BUILD_URL}"
                ]
                httpRequest(
                    httpMode: 'POST',
                    contentType: 'APPLICATION_JSON',
                    requestBody: groovy.json.JsonOutput.toJson(payload),
                    url: 'https://discord.com/api/webhooks/1370013350733545525/XQ4yZSkIN7s8PFgN_gofeCDJWHGwM52rwuGFTXvRYbt0IwpGP12buIstrIlNO_iJyJbe'
                )
            }
        }
    }
}
